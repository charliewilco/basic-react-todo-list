{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/list-item.tsx","webpack:///./src/list-view.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/reducer.ts","webpack:///./src/todo-form.tsx","webpack:///external \"@reach/dialog\"","webpack:///external \"@reach/tabs\"","webpack:///external \"immer\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-icons/fi\"","webpack:///external \"uuid\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import * as React from 'react';\nimport {TodoItem} from './reducer';\nimport {FiEdit3, FiCheckCircle, FiTrash2} from 'react-icons/fi';\n\ninterface IListItemProps {\n  todo: TodoItem;\n  onCompleted(id: string): void;\n  onUndo(id: string): void;\n  onUpdate(id: string, task: string): void;\n  onEdit(id: string): void;\n  onRemove(id: string): void;\n}\n\ninterface EditProps {\n  item: TodoItem;\n  onUpdate: (id: string, task: string) => void;\n}\n\nexport const EditItem: React.FC<EditProps> = function(props) {\n  const [value, setValue] = React.useState<string>(props.item.task);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    props.onUpdate(props.item.id, value);\n  };\n\n  return (\n    <form className=\"InlineForm\" onSubmit={handleSubmit}>\n      <input className=\"InlineInput\" value={value} onChange={handleChange} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default function ListItem(props: IListItemProps) {\n  return (\n    <li className=\"ListItem\">\n      <div className=\"Todo\">\n        <button\n          className=\"ActionButton\"\n          onClick={() =>\n            props.todo.completed\n              ? props.onUndo(props.todo.id)\n              : props.onCompleted(props.todo.id)\n          }>\n          <FiCheckCircle\n            size={16}\n            color={props.todo.completed ? '#9de4b5' : '#04060b'}\n          />\n        </button>\n\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n            justifyContent: 'space-between',\n            marginLeft: 8,\n          }}>\n          <div className=\"InlineContent\">\n            {props.todo.completed ? (\n              <span>\n                <b style={{color: '#9de4b5'}}>Completed!</b>{' '}\n                <span className=\"strike\">{props.todo.task}</span>\n              </span>\n            ) : (\n              <span>{props.todo.task}</span>\n            )}\n          </div>\n\n          <div className=\"InlineActions\">\n            <button\n              className=\"ActionButton\"\n              onClick={() => props.onRemove(props.todo.id)}>\n              <FiTrash2 size={16} />\n            </button>\n            <button\n              className=\"ActionButton\"\n              disabled={props.todo.completed}\n              onClick={() => props.onEdit(props.todo.id)}>\n              <FiEdit3 size={16} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import * as React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n\nimport { Dialog } from \"@reach/dialog\";\nimport ListItem from \"./list-item\";\nimport TodoForm from \"./todo-form\";\nimport { Action, TodoActions, reducer, INITIAL_LIST, TodoItem } from \"./reducer\";\n\ninterface IListProps {\n  todos: TodoItem[];\n  dispatch: React.Dispatch<Action>;\n}\n\nfunction List({ todos, dispatch }: IListProps) {\n  return (\n    <div>\n      <ul className=\"List\">\n        {todos.length > 0 ? (\n          todos.map(t => (\n            <ListItem\n              key={t.id}\n              todo={t}\n              onEdit={id => dispatch({ type: TodoActions.EDIT_TODO, id })}\n              onRemove={id => dispatch({ type: TodoActions.REMOVE_TODO, id })}\n              onUpdate={(id, task) =>\n                dispatch({ type: TodoActions.UPDATE_TODO, id, payload: task })\n              }\n              onUndo={id => dispatch({ type: TodoActions.MARK_AS_NOT_COMPLETED, id })}\n              onCompleted={id => dispatch({ type: TodoActions.MARK_AS_COMPLETED, id })}\n            />\n          ))\n        ) : (\n          <div>\n            <h2>Nothing to see here!</h2>\n          </div>\n        )}\n      </ul>\n      <div className=\"ActionTray\">\n        <button\n          className=\"Button\"\n          type=\"button\"\n          onClick={() =>\n            dispatch({\n              type: TodoActions.OPEN_MODAL\n            })\n          }>\n          Add New\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const ListView: React.FC = function() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    modalOpen: false,\n    selected: null,\n    currentFilter: \"All\",\n    todos: INITIAL_LIST\n  });\n\n  const completed = React.useMemo(() => state.todos.filter(todo => todo.completed), [state]);\n  const incompleted = React.useMemo(() => state.todos.filter(todo => !todo.completed), [\n    state\n  ]);\n\n  return (\n    <>\n      <Tabs>\n        <TabList className=\"Filters\">\n          <Tab>All</Tab>\n          <Tab>Completed</Tab>\n          <Tab>Todo</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <List dispatch={dispatch} todos={state.todos} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={completed} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={incompleted} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n\n      <Dialog\n        isOpen={state.modalOpen}\n        onDismiss={() =>\n          dispatch({\n            type: TodoActions.DISMISS_MODAL\n          })\n        }>\n        <TodoForm\n          value={state.selected !== null ? state.selected.task : null}\n          onSubmit={value =>\n            state.selected !== null\n              ? dispatch({\n                  type: TodoActions.UPDATE_TODO,\n                  payload: value,\n                  id: state.selected.id\n                })\n              : dispatch({ type: TodoActions.ADD_TODO, payload: value })\n          }\n        />\n      </Dialog>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport Head from \"next/head\";\nimport { ListView } from \"../list-view\";\n\nexport default function IndexPage() {\n  return (\n    <div className=\"Container\">\n      <Head>\n        <title>Basic Todo List</title>\n      </Head>\n      <h1>Tasks</h1>\n      <ListView />\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport produce from \"immer\";\nimport { v4 as uuid } from \"uuid\";\n\nexport interface TodoItem {\n  completed: boolean;\n  id: string;\n  task: string;\n  editing: boolean;\n}\n\nexport type Filters = \"All\" | \"Completed\" | \"Todo\";\n\ninterface ITodoListState {\n  todos: TodoItem[];\n  currentFilter: Filters;\n  modalOpen: boolean;\n  selected: null | {\n    task: string;\n    id: string;\n  };\n}\n\nexport enum TodoActions {\n  ADD_TODO = \"ADD_TODO\",\n  EDIT_TODO = \"EDIT_TODO\",\n  UPDATE_TODO = \"UPDATE_TODO\",\n  REMOVE_TODO = \"REMOVE_TODO\",\n  MARK_AS_COMPLETED = \"MARK_AS_COMPLETED\",\n  MARK_AS_NOT_COMPLETED = \"MARK_AS_NOT_COMPLETED\",\n  OPEN_MODAL = \"OPEN_MODAL\",\n  DISMISS_MODAL = \"DISMISS_MODAL\"\n}\n\nexport const INITIAL_LIST: TodoItem[] = [\n  {\n    id: uuid(),\n    completed: false,\n    task: \"get lunch\",\n    editing: false\n  },\n  {\n    id: uuid(),\n    completed: false,\n    task: \"Check Flight\",\n    editing: false\n  }\n];\n\nexport const GLOBAL_TODOS = {\n  todos: [...INITIAL_LIST]\n};\n\nexport type Action =\n  | {\n      type: TodoActions.ADD_TODO;\n      payload: string;\n    }\n  | {\n      type: TodoActions.UPDATE_TODO;\n      id: string;\n      payload: string;\n    }\n  | {\n      type:\n        | TodoActions.EDIT_TODO\n        | TodoActions.REMOVE_TODO\n        | TodoActions.MARK_AS_COMPLETED\n        | TodoActions.MARK_AS_NOT_COMPLETED;\n      id: string;\n    }\n  | {\n      type: TodoActions.OPEN_MODAL | TodoActions.DISMISS_MODAL;\n    };\n\nexport const reducer: React.Reducer<ITodoListState, Action> = produce(\n  (draft: ITodoListState, action: Action) => {\n    switch (action.type) {\n      case TodoActions.ADD_TODO: {\n        if (action.payload.length > 0) {\n          draft.todos.unshift({\n            task: action.payload,\n            id: uuid(),\n            completed: false,\n            editing: false\n          });\n        }\n        draft.modalOpen = false;\n        break;\n      }\n      case TodoActions.UPDATE_TODO: {\n        const index = draft.todos.findIndex(element => element.id === action.id);\n\n        draft.todos[index] = {\n          ...draft.todos[index],\n          editing: false,\n          task: action.payload\n        };\n        draft.selected = null;\n        draft.modalOpen = false;\n        break;\n      }\n      case TodoActions.REMOVE_TODO: {\n        const index = draft.todos.findIndex(element => element.id === action.id);\n\n        draft.todos.splice(index, 1);\n\n        break;\n      }\n      case TodoActions.EDIT_TODO: {\n        const index = draft.todos.findIndex(element => element.id === action.id);\n\n        draft.modalOpen = true;\n        draft.todos[index] = {\n          ...draft.todos[index],\n          editing: true\n        };\n\n        draft.selected = {\n          task: draft.todos[index].task,\n          id: draft.todos[index].id\n        };\n\n        break;\n      }\n      case TodoActions.MARK_AS_NOT_COMPLETED: {\n        const index = draft.todos.findIndex(element => element.id === action.id);\n\n        draft.todos[index] = {\n          ...draft.todos[index],\n          completed: false\n        };\n\n        break;\n      }\n      case TodoActions.MARK_AS_COMPLETED: {\n        const index = draft.todos.findIndex(element => element.id === action.id);\n\n        draft.todos[index] = {\n          ...draft.todos[index],\n          completed: true\n        };\n\n        break;\n      }\n      case TodoActions.DISMISS_MODAL: {\n        draft.modalOpen = false;\n        draft.selected = null;\n\n        break;\n      }\n\n      case TodoActions.OPEN_MODAL: {\n        draft.modalOpen = true;\n        break;\n      }\n    }\n  }\n);\n","import * as React from \"react\";\n\ninterface ITodoForm {\n  value: string | null;\n  onSubmit(value: string): void;\n}\n\nexport default function TodoForm(props: ITodoForm) {\n  const [value, setValue] = React.useState(props.value === null ? \"\" : props.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    props.onSubmit(value);\n\n    setValue(\"\");\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input className=\"Input\" value={value} onChange={handleChange} />\n      <div className=\"Tray\">\n        <button className=\"Button\" type=\"submit\" disabled={value.length === 0}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n","module.exports = require(\"@reach/dialog\");","module.exports = require(\"@reach/tabs\");","module.exports = require(\"immer\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-icons/fi\");","module.exports = require(\"uuid\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAgBA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;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","sourceRoot":""}