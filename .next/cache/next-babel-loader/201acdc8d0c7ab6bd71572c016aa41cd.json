{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/charlespeters/Code/basic-react-todo-list/src/todo-form.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nexport default function TodoForm(props) {\n  var _React$useState = React.useState(props.value === null ? \"\" : props.value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    props.onSubmit(value);\n    setValue(\"\");\n  };\n\n  return __jsx(\"form\", {\n    className: \"Form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    className: \"Input\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"Tray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"Button\",\n    type: \"submit\",\n    disabled: value.length === 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/Users/charlespeters/Code/basic-react-todo-list/src/todo-form.tsx"],"names":["React","TodoForm","props","useState","value","setValue","handleChange","event","target","handleSubmit","preventDefault","onSubmit","length"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAOA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAoC;AAAA,wBACvBF,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,KAAN,KAAgB,IAAhB,GAAuB,EAAvB,GAA4BF,KAAK,CAACE,KAAjD,CADuB;AAAA;AAAA,MAC1CA,KAD0C;AAAA,MACnCC,QADmC;;AAEjD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAgD;AACnEF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAFD;;AAIA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAA4B;AAC/CA,IAAAA,KAAK,CAACG,cAAN;AAEAR,IAAAA,KAAK,CAACS,QAAN,CAAeP,KAAf;AAEAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAND;;AAQA,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEI,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAEL,KAAhC;AAAuC,IAAA,QAAQ,EAAEE,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,QAAQ,EAAEF,KAAK,CAACQ,MAAN,KAAiB,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAFF,CADF;AAUD","sourcesContent":["import * as React from \"react\";\n\ninterface ITodoForm {\n  value: string | null;\n  onSubmit(value: string): void;\n}\n\nexport default function TodoForm(props: ITodoForm) {\n  const [value, setValue] = React.useState(props.value === null ? \"\" : props.value);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    props.onSubmit(value);\n\n    setValue(\"\");\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input className=\"Input\" value={value} onChange={handleChange} />\n      <div className=\"Tray\">\n        <button className=\"Button\" type=\"submit\" disabled={value.length === 0}>\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}