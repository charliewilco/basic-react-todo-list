{"ast":null,"code":"var _jsxFileName = \"/Users/charlespeters/Code/basic-react-todo-list/src/list-view.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/dialog/styles.css\";\nimport ListItem from \"./list-item\";\nimport TodoForm from \"./todo-form\";\nimport { TodoActions, reducer, INITIAL_LIST } from \"./reducer\";\n\nfunction List({\n  todos,\n  dispatch\n}) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, todos.length > 0 ? todos.map(t => __jsx(ListItem, {\n    key: t.id,\n    todo: t,\n    onEdit: id => dispatch({\n      type: TodoActions.EDIT_TODO,\n      id\n    }),\n    onRemove: id => dispatch({\n      type: TodoActions.REMOVE_TODO,\n      id\n    }),\n    onUpdate: (id, task) => dispatch({\n      type: TodoActions.UPDATE_TODO,\n      id,\n      payload: task\n    }),\n    onUndo: id => dispatch({\n      type: TodoActions.MARK_AS_NOT_COMPLETED,\n      id\n    }),\n    onCompleted: id => dispatch({\n      type: TodoActions.MARK_AS_COMPLETED,\n      id\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Nothing to see here!\"))), __jsx(\"div\", {\n    className: \"ActionTray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"Button\",\n    type: \"button\",\n    onClick: () => dispatch({\n      type: TodoActions.OPEN_MODAL\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Add New\")));\n}\n\nexport const ListView = function () {\n  const [state, dispatch] = React.useReducer(reducer, {\n    modalOpen: false,\n    selected: null,\n    currentFilter: \"All\",\n    todos: INITIAL_LIST\n  });\n  const completed = React.useMemo(() => state.todos.filter(todo => todo.completed), [state]);\n  const incompleted = React.useMemo(() => state.todos.filter(todo => !todo.completed), [state]);\n  return __jsx(React.Fragment, null, __jsx(Tabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(TabList, {\n    className: \"Filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"All\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Completed\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Todo\")), __jsx(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: state.todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: incompleted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))), __jsx(Dialog, {\n    isOpen: state.modalOpen,\n    onDismiss: () => dispatch({\n      type: TodoActions.DISMISS_MODAL\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(TodoForm, {\n    value: state.selected !== null ? state.selected.task : null,\n    onSubmit: value => state.selected !== null ? dispatch({\n      type: TodoActions.UPDATE_TODO,\n      payload: value,\n      id: state.selected.id\n    }) : dispatch({\n      type: TodoActions.ADD_TODO,\n      payload: value\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/charlespeters/Code/basic-react-todo-list/src/list-view.tsx"],"names":["React","Tabs","TabList","Tab","TabPanels","TabPanel","Dialog","ListItem","TodoForm","TodoActions","reducer","INITIAL_LIST","List","todos","dispatch","length","map","t","id","type","EDIT_TODO","REMOVE_TODO","task","UPDATE_TODO","payload","MARK_AS_NOT_COMPLETED","MARK_AS_COMPLETED","OPEN_MODAL","ListView","state","useReducer","modalOpen","selected","currentFilter","completed","useMemo","filter","todo","incompleted","DISMISS_MODAL","value","ADD_TODO"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n\nimport { Dialog } from \"@reach/dialog\";\nimport \"@reach/tabs/styles.css\";\nimport \"@reach/dialog/styles.css\";\nimport ListItem from \"./list-item\";\nimport TodoForm from \"./todo-form\";\nimport { Action, TodoActions, reducer, INITIAL_LIST, TodoItem } from \"./reducer\";\n\ninterface IListProps {\n  todos: TodoItem[];\n  dispatch: React.Dispatch<Action>;\n}\n\nfunction List({ todos, dispatch }: IListProps) {\n  return (\n    <div>\n      <ul className=\"List\">\n        {todos.length > 0 ? (\n          todos.map(t => (\n            <ListItem\n              key={t.id}\n              todo={t}\n              onEdit={id => dispatch({ type: TodoActions.EDIT_TODO, id })}\n              onRemove={id => dispatch({ type: TodoActions.REMOVE_TODO, id })}\n              onUpdate={(id, task) =>\n                dispatch({ type: TodoActions.UPDATE_TODO, id, payload: task })\n              }\n              onUndo={id => dispatch({ type: TodoActions.MARK_AS_NOT_COMPLETED, id })}\n              onCompleted={id => dispatch({ type: TodoActions.MARK_AS_COMPLETED, id })}\n            />\n          ))\n        ) : (\n          <div>\n            <h2>Nothing to see here!</h2>\n          </div>\n        )}\n      </ul>\n      <div className=\"ActionTray\">\n        <button\n          className=\"Button\"\n          type=\"button\"\n          onClick={() =>\n            dispatch({\n              type: TodoActions.OPEN_MODAL\n            })\n          }>\n          Add New\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const ListView: React.FC = function() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    modalOpen: false,\n    selected: null,\n    currentFilter: \"All\",\n    todos: INITIAL_LIST\n  });\n\n  const completed = React.useMemo(() => state.todos.filter(todo => todo.completed), [state]);\n  const incompleted = React.useMemo(() => state.todos.filter(todo => !todo.completed), [\n    state\n  ]);\n\n  return (\n    <>\n      <Tabs>\n        <TabList className=\"Filters\">\n          <Tab>All</Tab>\n          <Tab>Completed</Tab>\n          <Tab>Todo</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <List dispatch={dispatch} todos={state.todos} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={completed} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={incompleted} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n\n      <Dialog\n        isOpen={state.modalOpen}\n        onDismiss={() =>\n          dispatch({\n            type: TodoActions.DISMISS_MODAL\n          })\n        }>\n        <TodoForm\n          value={state.selected !== null ? state.selected.task : null}\n          onSubmit={value =>\n            state.selected !== null\n              ? dispatch({\n                  type: TodoActions.UPDATE_TODO,\n                  payload: value,\n                  id: state.selected.id\n                })\n              : dispatch({ type: TodoActions.ADD_TODO, payload: value })\n          }\n        />\n      </Dialog>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}