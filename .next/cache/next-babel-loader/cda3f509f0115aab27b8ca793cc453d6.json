{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/charlespeters/Code/basic-react-todo-list/src/list-view.tsx\";\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\nimport { Dialog } from \"@reach/dialog\";\nimport ListItem from \"./list-item\";\nimport TodoForm from \"./todo-form\";\nimport { TodoActions, reducer, INITIAL_LIST } from \"./reducer\";\n\nfunction List(_ref) {\n  var todos = _ref.todos,\n      dispatch = _ref.dispatch;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    className: \"List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, todos.length > 0 ? todos.map(function (t) {\n    return __jsx(ListItem, {\n      key: t.id,\n      todo: t,\n      onEdit: function onEdit(id) {\n        return dispatch({\n          type: TodoActions.EDIT_TODO,\n          id: id\n        });\n      },\n      onRemove: function onRemove(id) {\n        return dispatch({\n          type: TodoActions.REMOVE_TODO,\n          id: id\n        });\n      },\n      onUpdate: function onUpdate(id, task) {\n        return dispatch({\n          type: TodoActions.UPDATE_TODO,\n          id: id,\n          payload: task\n        });\n      },\n      onUndo: function onUndo(id) {\n        return dispatch({\n          type: TodoActions.MARK_AS_NOT_COMPLETED,\n          id: id\n        });\n      },\n      onCompleted: function onCompleted(id) {\n        return dispatch({\n          type: TodoActions.MARK_AS_COMPLETED,\n          id: id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }) : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Nothing to see here!\"))), __jsx(\"div\", {\n    className: \"ActionTray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"Button\",\n    type: \"button\",\n    onClick: function onClick() {\n      return dispatch({\n        type: TodoActions.OPEN_MODAL\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add New\")));\n}\n\nexport var ListView = function ListView() {\n  var _React$useReducer = React.useReducer(reducer, {\n    modalOpen: false,\n    selected: null,\n    currentFilter: \"All\",\n    todos: INITIAL_LIST\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var completed = React.useMemo(function () {\n    return state.todos.filter(function (todo) {\n      return todo.completed;\n    });\n  }, [state]);\n  var incompleted = React.useMemo(function () {\n    return state.todos.filter(function (todo) {\n      return !todo.completed;\n    });\n  }, [state]);\n  return __jsx(React.Fragment, null, __jsx(Tabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(TabList, {\n    className: \"Filters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"All\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Completed\"), __jsx(Tab, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Todo\")), __jsx(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: state.todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: completed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(List, {\n    dispatch: dispatch,\n    todos: incompleted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))), __jsx(Dialog, {\n    isOpen: state.modalOpen,\n    onDismiss: function onDismiss() {\n      return dispatch({\n        type: TodoActions.DISMISS_MODAL\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(TodoForm, {\n    value: state.selected !== null ? state.selected.task : null,\n    onSubmit: function onSubmit(value) {\n      return state.selected !== null ? dispatch({\n        type: TodoActions.UPDATE_TODO,\n        payload: value,\n        id: state.selected.id\n      }) : dispatch({\n        type: TodoActions.ADD_TODO,\n        payload: value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/charlespeters/Code/basic-react-todo-list/src/list-view.tsx"],"names":["React","Tabs","TabList","Tab","TabPanels","TabPanel","Dialog","ListItem","TodoForm","TodoActions","reducer","INITIAL_LIST","List","todos","dispatch","length","map","t","id","type","EDIT_TODO","REMOVE_TODO","task","UPDATE_TODO","payload","MARK_AS_NOT_COMPLETED","MARK_AS_COMPLETED","OPEN_MODAL","ListView","useReducer","modalOpen","selected","currentFilter","state","completed","useMemo","filter","todo","incompleted","DISMISS_MODAL","value","ADD_TODO"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from \"@reach/tabs\";\n\nimport { Dialog } from \"@reach/dialog\";\nimport ListItem from \"./list-item\";\nimport TodoForm from \"./todo-form\";\nimport { Action, TodoActions, reducer, INITIAL_LIST, TodoItem } from \"./reducer\";\n\ninterface IListProps {\n  todos: TodoItem[];\n  dispatch: React.Dispatch<Action>;\n}\n\nfunction List({ todos, dispatch }: IListProps) {\n  return (\n    <div>\n      <ul className=\"List\">\n        {todos.length > 0 ? (\n          todos.map(t => (\n            <ListItem\n              key={t.id}\n              todo={t}\n              onEdit={id => dispatch({ type: TodoActions.EDIT_TODO, id })}\n              onRemove={id => dispatch({ type: TodoActions.REMOVE_TODO, id })}\n              onUpdate={(id, task) =>\n                dispatch({ type: TodoActions.UPDATE_TODO, id, payload: task })\n              }\n              onUndo={id => dispatch({ type: TodoActions.MARK_AS_NOT_COMPLETED, id })}\n              onCompleted={id => dispatch({ type: TodoActions.MARK_AS_COMPLETED, id })}\n            />\n          ))\n        ) : (\n          <div>\n            <h2>Nothing to see here!</h2>\n          </div>\n        )}\n      </ul>\n      <div className=\"ActionTray\">\n        <button\n          className=\"Button\"\n          type=\"button\"\n          onClick={() =>\n            dispatch({\n              type: TodoActions.OPEN_MODAL\n            })\n          }>\n          Add New\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport const ListView: React.FC = function() {\n  const [state, dispatch] = React.useReducer(reducer, {\n    modalOpen: false,\n    selected: null,\n    currentFilter: \"All\",\n    todos: INITIAL_LIST\n  });\n\n  const completed = React.useMemo(() => state.todos.filter(todo => todo.completed), [state]);\n  const incompleted = React.useMemo(() => state.todos.filter(todo => !todo.completed), [\n    state\n  ]);\n\n  return (\n    <>\n      <Tabs>\n        <TabList className=\"Filters\">\n          <Tab>All</Tab>\n          <Tab>Completed</Tab>\n          <Tab>Todo</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <List dispatch={dispatch} todos={state.todos} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={completed} />\n          </TabPanel>\n          <TabPanel>\n            <List dispatch={dispatch} todos={incompleted} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n\n      <Dialog\n        isOpen={state.modalOpen}\n        onDismiss={() =>\n          dispatch({\n            type: TodoActions.DISMISS_MODAL\n          })\n        }>\n        <TodoForm\n          value={state.selected !== null ? state.selected.task : null}\n          onSubmit={value =>\n            state.selected !== null\n              ? dispatch({\n                  type: TodoActions.UPDATE_TODO,\n                  payload: value,\n                  id: state.selected.id\n                })\n              : dispatch({ type: TodoActions.ADD_TODO, payload: value })\n          }\n        />\n      </Dialog>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}